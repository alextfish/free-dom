<p class="flash warning">FreeDom needs to be updated to the latest Rails version and corresponding Heroku stack.
This will involve a brief period of downtime while the database is migrated. <br/>

The downtime is scheduled for <strong>0700 UTC on Sunday 19th March</strong>, and is expected to last less than 1 hour. However, please be patient if it takes longer, in which case I will endeavour to post updates on FreeDom's <a href="http://www.toothycat.net/wiki/wiki.pl?FreeDom">wiki page</a>. 

</p>
<div id="game_state" style="">
  <div id="last_changed">
    Game state last changed at: <span id="last_change_value"><%= h @last_mod.httpdate -%></span>
  </div>
  <div id="last_refreshed">
    Last checked for changes at: <span id="last_refresh_value"><%= h Time.new.httpdate -%></span>
  </div>
	<div id="update_freq" class="lighter">
		<% if @player %>
		  Updating every <span id="update_freq_value"><%= @player.settings.update_interval %></span> 
			<span id="update_freq_form" style="display: none;">                   
        <%= text_field_tag :update_interval, @player.settings.update_interval, :size => 4 %> 
				<%= submit_tag "Set", 
                       :onclick => remote_function(:update => nil,
                                                   :url => {:action => :update_player_settings,
                                                            :id => @game},
                                                   :with => "'settings[update_interval]=' + escape($('update_interval').value)",
                                                   :success => "$('cancel_freq').innerHTML = 'Please refresh to enable change'")
                                   %>
			</span>
			seconds. <span id="change_freq"><%= link_to_function "Change.", "enable_freq_form()" %></span>
			         <span id="cancel_freq" style="display: none;"><%= link_to_function "Cancel.", "disable_freq_form()" %></span>
			<script>
				function enable_freq_form()
				{
					$('update_freq').className = "";
					$('update_freq_value').hide();
					$('update_freq_form').show();
					$('change_freq').hide();
					$('cancel_freq').show();					
				}
				function disable_freq_form()
        {
					$('update_freq').className = "lighter";
          $('update_freq_value').show();
          $('update_freq_form').hide();
          $('change_freq').show();
          $('cancel_freq').hide();          
        }			
			</script>
		<% else %>
		  <% freq = @user ? @user.settings.update_interval : 60 %>
			Updating every <%= freq %> seconds.			
		<% end %> 
	</div>
  <div id="status">
  	<div id="ended" style="display: none;"><%= game.state == 'ended' %></div>
		<div id="locked" style="display: none;">false</div>
    <p>
      Game state:
			<% if game.state == 'waiting' %>
        Waiting for players
			<% elsif game.state == 'running' %>
        In progress
			<% elsif game.state == 'ended' %>
        Ended
			<% else %>
        <%= h game.state %>
      <% end %>
    </p>
    <% if not game.active_ply_actions.empty? -%>
    <table id="waitingForTable">
      <tr>
        <td>
          Waiting for:
        </td>
        <td>
          <ul>
            <% game.active_ply_actions.select{|act| act.text && !act.text.empty?}.each do |act| %>
            <li>
              <%= act.player.name + " to " + act.text %>
            </li>
            <% end %>
          </ul>
        </td>
      </tr>
    </table>
    <% end -%>
  </div>
  <div id="players">
    <% if player %>
    <div id="player_private">
      <%= render :partial => 'player_private', :object => player,
      :locals => {:controls => controls} %>
      <!--     <%= button_to "Leave Game", :action => 'clear_player', :id => game %> -->
    </div><hr/><% end %>
    <%= raw game_facts(game) %>
    <div id="player_public">
      <table class="other_players" cellspacing="5">
        <% other_players = game.players.reject {|p| p == player} -%>
        <% if player && player.seat             
            other_players = other_players.sort_by {|p| (p.seat - player.seat) % game.players.length} 
           end %>
				<% other_players.in_groups_of(2) do |chunk| %>
          <tr class="other_players">
            <%= render :partial => 'player',
                       :collection => chunk.compact,
                       :locals => {:controls => controls} %>
          </tr>
        <% end -%>
      </table>
    </div>
  </div>
  <div id="piles">
    <h3>Buy Piles</h3>
    <table>
      <tr>
        <th>
          Card Type
        </th>
        <th>
          Cost
        </th>
        <th>
          Remaining
        </th>
				<th><!-- pile state--></th>
      </tr>
      <% if controls.include? :piles -%>
      <tr>
        <td>
        </td>
        <td>
        </td>
        <td>
        </td>
				<td></td>
        <% controls[:piles].each do |control| -%>
				<td>
          <% if control[:nil_action] -%>
            <% case control[:type]
               when :button -%>        
	            <%= form_remote_tag :url => {:action => control[:action]},
							 								            :before => "$('spinner').show()",
															            :complete => "$('spinner').hide()",
															            :loading => "disable_named('#{control[:name]}')" do -%>
		            <%= hidden_field_tag :nil_action, control[:nil_action], :id => "#{control[:action]}_nil_action" -%>
		            <% if control[:params] -%>
		              <% control[:params].each do |key, value| -%>
		                <%= hidden_field_tag key, value, :id => "#{key}_nil}" -%>
		              <% end %>
		            <% end %>
	              <%= submit_tag control[:nil_action], :name => control[:name] -%>
	            <% end -%>				        
	          <% end -%>
	        <% end -%>
				</td>					
        <% end -%>
      </tr>
      <% end -%>
      <%= render :partial => 'pile', :collection => game.piles, :locals => {:controls => controls, :num_players => game.players.length} %>
    </table>
  </div>
  <div id="start_button">
    <%
    # Present a start button to the first-joined player,
    # so long as there are more than 2 and the game is waiting
    if (game.players.length >= 2 and
    player and
    player == game.players[0] and
    game.state == 'waiting') %>
      <%= form_remote_tag(:url => { :action => :start_game },
                                    :before => "$('gameStartSpinner').show()",
                                    :after => "$('start_game_btn').disabled = true",
                                    :complete => "$('gameStartSpinner').hide()",
                                    :failure => "alert('Sorry, something went wrong. Please refresh and try again');") do %>
        <%= submit_tag "Start Game", :onclick => "this.value = 'Please Wait...';", :id => "start_game_btn" %>
      <% end %>
    <% end %>
  </div>
	<div id="join_button">
		<% if !player && @user &&
          (game.users.include?(@user) ||
           (game.state == 'waiting' &&
            game.players.length < game.max_players)) %>
      <%= button_to "Join Game", join_game_path(game) %>
		<% end %>
  </div>
  <%= link_to 'Lobby', games_path %>
</div>
<div id="chat">
	<div id="chatbox">
		<% game.chats.each do |chat_line| %>
		  <%= render :partial => 'chat_line', :object => chat_line %>
		<% end %>
  </div>
	<%= form_remote_tag :url => speak_game_url, 
                     :update => {:success => 'chatbox', :failure => 'flash'}, 
                     :position => 'bottom',
                     :after => 'this.reset()',
                     :complete => '$(\'chatbox\').scrollTop = $(\'chatbox\').scrollHeight;' do %>
	 <div>
    <%= text_field_tag("name", nil, :placeholder => "Name?") if !@user%>
    <%= text_field_tag("say", nil, :placeholder => "What do you want to say?", :autocomplete => 'off') %>
		<%= submit_tag "Say", :class => 'input-hack' %>
	 </div>
	<% end %>
</div>
<div id="history">
  <ul>
    <% game.histories.each do |history| %>
    <% classes = history.css_class %>
    <% if player && history.css_class =~ /\bplayer#{@player.seat}\b/ %>
    <% classes += " self" %>
    <% end %>
    <li class="<%= classes -%>">
      <%= format_history(history, @player) -%>
    </li>
    <% end %>
  </ul>
</div>
<div id="pend_actions" class="debug <%= 'hidden' unless ((@user && @user.name == 'Chowlett') || request.host == '127.0.0.1') %>" style="margin-left: 65%">
  <% if game.root_action(true) -%>
  <ul>
    <%= render(:partial => "pend_action", :object => game.root_action) %>
  </ul>
  <% end -%>
</div>

<% if game.state == "ended" %>
	<div id="resultOverlay" class="overlay">
	</div>

	<div id="result">
	  <p class="centred header">
	    Game Over - Results
	  </p>
	  <% ply_ordered = game.players.sort_by {|p| p.score}.reverse %>
	  <ul id="resultList">
	    <li class="resultEntry winner">
	      <span class="name"><%= h(ply_ordered[0].name) -%></span>
	      - Winner with <%= h(ply_ordered[0].score) -%> points! <%= link_to_function("(show deck)",
	      "$(this).hide(); $('hide_deck_0').show();" + visual_effect(:blind_down, 'deck_list_0', :duration => 0.5),
	      {:class => "showHideDeck", :id => "show_deck_0"}) -%>
	      <%= link_to_function("(hide deck)",
	      "$(this).hide(); $('show_deck_0').show();" + visual_effect(:blind_up, 'deck_list_0', :duration => 0.5),
	      {:class => "showHideDeck", :id => "hide_deck_0", :style => "display: none"}) -%>
	      <p class="deckList" style="display: none;" id="deck_list_0">
					<%= raw ply_ordered[0].cards_for_decklist %>
	      </p>
	    </li>
	    <% ply_ordered.each_with_index do |ply, ix| %>
	    <% if ix != 0 %>
	    <li class="resultEntry">
	      <span class="name"><%= h(ply.name) -%></span>
	      -<%= %w<first second third fourth fifth sixth>[ix] + " with " + h(ply.score) -%> points <%= link_to_function("(show deck)",
	      "$(this).hide(); $('hide_deck_#{ix}').show();" + visual_effect(:blind_down, "deck_list_#{ix}", :duration => 0.5),
	      {:class => "showHideDeck", :id => "show_deck_#{ix}"}) -%>
	      <%= link_to_function("(hide deck)",
	      "$(this).hide(); $('show_deck_#{ix}').show();" + visual_effect(:blind_up, "deck_list_#{ix}", :duration => 0.5),
	      {:class => "showHideDeck", :id => "hide_deck_#{ix}", :style => "display: none"}) -%>
	      <p class="deckList" style="display: none;" id=<%= "deck_list_#{ix}" -%>>
	        <%= raw ply.cards_for_decklist -%>
	      </p>
	    </li>
	    <% end %>
	    <% end %>
	  </ul>
	  <p class="centred gapAbove">
	    <%= link_to "Back to Index", games_path -%>
	  </p>
	</div>
<% end %>
