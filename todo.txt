Planned for the next release:
* Customised options for the randomly generated sets, similar to those that [http://www.hiwiller.com/dominion/ this randomiser] offers
* Ratings history (probably a box on Ratings page which is filled by AJAX with dynamically-generated content when a row is clicked in the table)
* Some security on game deletion - only creator should be able to delete a game; possibly only if it isn't currently running?
* Switch to queue everything
* Fix transactional integrity - Game actions are handled outside the transaction block which handles the user-prompted action.
* Act on AJAX failure
* Move play, play_treasure (and others?) out of Card and into Card Decorators
* AutoSeal options
* Individual card tests; integration ("front end") tests
* Fix layout. Main game area should be in the flow, right sidebar should be floated with explicit heights.
* Announcement script to web-page for ease of use
* Allow settings to be altered in PBEM
* Allow PBEMer to receive Game Created notifications
* Make invoking of manual treasure playing smarter

Just released:
 Support for the Prosperity expansion
   Implement all cards
   Update player options (remove AutocratShow; add AutoMountebank; add AutoSeal options; improve in-game display (collapse, or show only relevant?))
   Add cards to new-game picker
   Add handling for adding Platinum & Colony (force present, absent, by rules)  
 Automatically choose the only available choice if an action offers the player choice from precisely one choice. (Eg Swindler / Upgrade / Smugglers if 0 or 1 choices; Baron / Explorer / Moneylender if none of the relevant card type in hand; Thief if no coin revealed for a player; Mine if only one treasure in hand)
 Replace two-tone card backgrounds with Gradients (with appropriate fallback, possibly through use of Modernizr). Chrome is now (largely) supported, and it suffers a 1-pixel glitch on odd-pixel-wide cards.
 Display when decks get shuffled (preferably interspersed into existing history entries as "drew 2, shuffled, drew 1")
 Extra columns on Ratings table showing "immediately-previous" value
 Add gradient backgrounds to history lines involving multiple players.
 Red text for attacks (wherever cards get coloured backgrounds)
 Tests!
*Add email interface
   Process histories to hide hidden info
   Generalise :card_index, :pile_index etc.
 Switch to queue-gain with params in correct order
 Fix discard ordering throughout
 Full random start
 Add announcement script

Possible for next release:

----
'''Planned Features'''
The following are intended to go into a future release. Please help me prioritise by voting! I'll leave an empty '''Priority:''' bullet with each - add '''+''' ''or'' '''-''' if you want to indicate a desire for a feature to be done soon, or relative apathy regarding a feature.
Please don't cancel + with -; ++--+ is much more interesting that just
+.

You can also leave English comments below.

:'''Expansions'''
*Support for the Envoy, Black Market and Stash promo cards
**Priority: -; +(Black Market only)
*Support for the Alchemy expansion (requires me finding card images)
**Priority: +
*Support for the Prosperity expansion
**Priority: ++
*Support for the Cornucopia expansion
**
:'''Engine'''
*An option on the Preferences page for "skip my buy if I can't buy anything other than Curse/Copper/Estate" with it"
**Priority:
*Queueing of choices/inputs. Could happily be restricted to ones that are already in the tree. See below.
**Priority:
*Automatically choose the only available choice if an action offers the player choice from precisely one choice. (Eg Swindler / Upgrade / Smugglers if 0 or 1 choices; Baron / Explorer / Moneylender if none of the relevant card type in hand; Thief if no coin revealed for a player; Mine if only one treasure in hand)
**Priority: +
*Automatically select "Play no more" actions when no actions in hand (or is this a deliberate decision not to do this?)
**Priority:
:'''Interface - Notification'''
*Opt-in emailing when your input is required
**Priority: -
*Opt-in emailing when a new game is created waiting for players
**Priority:
:'''Interface - Other'''
*Card images instead of text
**Priority: -
::Note that using images would definitely put me on the wrong side of Copyright. Games rules themselves are not copyrightable, so at present I believe I am ''just'' legal.
*Fallback support for no javascript
**Priority: --+
*Don't show the Autocrat checkboxes in games without 'Crat (and similarly Automoat/any reactions)
**Priority:
* Customised options for the randomly generated sets, similar to those that [http://www.hiwiller.com/dominion/ this randomiser] offers
**Priority:
*Minor standardisations: standardise capitalisation of Steward buttons ("Two Cash" vs "Two cards"); standardise whether history lines end with a full stop or not; "choose steward's effect" vs. "choose minion mode"; stick with one or other of "his or her" and "their"; equal spacing either side of hyphens in results (currently "Alex - first"
but "Rachael -second"); standardise card wording (Masq - "Draw 2 cards", Village - "Draw 1", Market - "Draw 1 card", Upgrade - "Draw a
card")
**Priority:
*Pop-up card text for card names as they appear in the history, and other places like discard piles. Possibly also coloured backgrounds on card names in the history.
**Priority:
*Support for the "end of Governorship" house-rule - where once the game has ended, play continues until all the players have had the same number of turns each. Additionally, during this extra time Provinces may be bought even if the pile is empty. (As an option when starting a new game).
**Priority:
* When you've got multiple abilities simultaneously (such as choosing which players cards to keep and trash with spy) could we be able to keep choosing whilst the previous one is being sent?  Locking it up is minorly irritating.
** ''That might be tricky... --CH''
* CSS classes for whose turn it is, separate to the current ones for which player's affected
**Priority:
*Replace two-tone card backgrounds with Gradients (with appropriate fallback, possibly through use of Modernizr). More important if Chrome is now supportable, since it suffers a 1-pixel glitch on odd-pixel-wide cards.
**Priority:
*Allow users to specify their gender, so I can get rid of the nasty third-person-plural pronouns in histories
**Priority: -
*Display when decks get shuffled (preferably interspersed into existing history entries as "drew 2, shuffled, drew 1")
**Priority:
*A display of the current contents of your entire deck. (Possibly with the option to run it off when creating the game).
**Priority:
*OR: Limit history displayed
**Priority: -
*Ratings history. This item consists of multiple subitems:
**Extra columns on Ratings table showing "immediately-previous" value
***Priority:
**Ratings history (probably a box on Ratings page which is filled by AJAX with dynamically-generated content when a row is clicked in the
table)
***Priority:
**Ratings graph (as for history, but drawn in some way. Probably either need to learn HTML5 Canvas or find a JS graphing lib)
***Priority:
*Be all hip and new, and migrate to HTML 5 ([http://http://diveintohtml5.org/ useful resource])
**Priority: -
*Migrate to jQuery
**Priority: +
*Migrate to Rails 3
**Priority:
*Add gradient backgrounds to history lines involving multiple players.
**Priority:
*I know that the card game doesn't, but could we colour code attacks?
**Priority:
::Certainly. In the history, their text is red (in addition to Bold, since it's an Action). Would red text do?

'''Comments / Feature Requests'''
Can we get a plain old cardlist page?  Not particularly for the game itself, but for the inevitable dominion discussions.  --Vitenka :Seems like the Wiki would be a good place for that. How about [[Dominion/CardList]]? --AC :Actually, there's a pretty good one already at http://dominion.diehrstraits.com/?set=Prosperity&f=list . --AC

I think queueing of user inputs/choices might be one of the biggest usability enhancements possible, and it occurs that it might actually be quite doable. E.g. I play Bureaucrat, and know what I'm going to want to buy; the Alex:buy is in the tree already, so I'd like to be able to say "I'll buy a Silver" and have the rest of my turn take care of itself once the other players do their Crat actions. Thing is, the engine and UI already have a reasonable guess what the inputs for each element in the tree will be. I propose that you could let me select any action in the tree that's waiting on me, and specify what I hope to do when that option resolves. It will obviously only show me options that it currently knows about, and those options will need checking when the engine comes to actually process that element, but it could save a *lot* of time. --AC 
:It would probably be sufficient to be allowed to just move the "Wait for everybody else" task to the end, for those tasks which can't change your hand.  --Vitenka 
::Will require thought, but is probably doable. Don't expect it in the next release.
::''I'm starting to actively think about this. I think Alex's idea works, more or less. The tree of actions is gone (unless you're me! MuHaHaha! It's useful for debugging), but I could present a UI for "Later this turn, you will be asked to do the following. Click any of them to queue up an action which will be taken unless it has become illegal". The choice made then gets stored on the PendingAction object and is acted upon when the time comes. It's ''tricky'', but it ought to work, given care to make sure that choices made ''now'' map to the same choices later (for instance, when playing an Action, you tell the game the position of the card in your hand; that's not guaranteed to stay the same - but it should be possible to move to sending the card ID instead). --CH''

An undo button.  Please?  --Vitenka  (Both in general, and specifically, right now) 
:''That could be ''really'' difficult, but I'll have a think.''
::No, I think I can't really do that. I ''do'' have one in my half-complete ThroughTheAges server (which is now not going to get finished, due to http://boardgaming-online.com), but far fewer actions in TtA result in you gaining previously-hidden knowledge. Bear in mind that an Undo button has to be disabled as soon as you gain any information you didn't have before (through drawing cards, looking at cards, even just seeing whether anyone reacts to an attack).


A somewhat controversial feature request: display the current contents of your entire deck. Thing is, in the current interface you can always laboriously reproduce the contents by searching the history anyway.
I've found myself searching history for "How many times does it say "Alex bought Gold"? And there's one in my discards, which means there are two left in my deck. Right." Since it is possible to calculate it (or keep notes) anyway... --AC 
:I'm actually pondering going in the other direction, and displaying only - say - the last two complete turn rotations of history. So then you ''can't'' deduce your deck from the history. --CH
::I've decided that limiting history is silly; deck lists are likely function at some point (when I've worked out where to put them, for instance...)

Support for bots. Possibly as defined by a script on a wiki page. --[[qqzm]] :''There's always someone who wants bot support, and it's usually you ;-p. I could see this happening, but obviously we need a good API, which in turn means we need a good definition of what you'd need the API to provide in terms of enabling bot implementation. That will need discussion and heavy input from you. I'd make a subpage, but ToothyWiki doesn't allow two-level hierarchies. Perhaps I'll ask to move this to a root DominionServer page...''
::How I was thinking of it working was that the bot script would define 3 methods. Each of these would take a readonly game state object parameter and return a result defining it's current decision.
The engine could then call the procedure in much the same way as it displays the game state to the user, and handle the result in the same way it handles a user making decisions. The major work, of course, is in building a script interpreter - it's possible that Ruby has one built-in or available? I think you'd probably want the script language to be Ruby or Ruby-like so that you can reuse your existing code. The three methods I was thinking you'd want to have would be:
::: chooseAction - called whenever it is the bot's turn to take an action and it has one or more action cards in hand. The return value is either the id of the action (and the mode to use it in if
applicable) or some special value indicating "play no more actions".
::: buyCard - called whenever the bot has a buy to use. Given that it knows the game state (including which cards it has in play) then it doesn't need to have total cash and number of buys explicitly spelled out for it, but it would make it easier for bot writers if you were to provide such information. The return value is either a card to buy or skip.
::: makeChoice - called whenever the bot has to make a choice for a card (not necessarily its own). This one is obviously the most complicated and I'm not sure how best to implement it. There are so many different choices that come-up on different random cards. I think the best thing to do would be to say that the bot just has to implement each individual card that causes a choice, and have some sort of metadata on the bot (probably need this for name, description etc. anyway) that defines which cards it can be used with (so you can stop people from selecting the bot in a game with a card it doesn't know about). I don't know. It might be possible to distill the choices down to a well-defined set of atomic ones but I don't think it is, unfortunately.
::--[[qqzm]]
:::''Hee. This would be lots of fun. I think I'd want to program a bot to do a particular strategy. The Goldfish-bot (which buys Prov/Gold/Silver/nothing, and makes random choices in all other cases) would be fairly easy to program. I however point out that Mint, or Mining Village, show that total cash can't just be deduced from what's in play. --AC''

Hacking [http://boardgamegeek.com/boardgame/69789/ascension-chronicle-of-the-godslayer
Ascension] onto the same engine and framework. --[[qqzm]] :Looks like an interesting game, but very unlikely to happen. --CH

On the game start screen, have options for "Random, force 3/4 split, force 2/5 split" so that the game creator can choose to give everyone an equal start - useful if picking a set that's particularly polarised one way or the other e.g. the game which was all 3s and somebody
(Vitenka?) was severely hampered by starting with 5/2. --[[qqzm]]
